on:
   push:
   workflow_dispatch:
   
env:  
  containerhost: https://ghcr.io
   
jobs:

  build-test-image:
    strategy:
      matrix: 
        include:
        - dockerfile: Dockerfile
          containertag: ghcr.io/rajbos/testing-snyk

        - dockerfile: Dockerfile-runtime
          containertag: ghcr.io/rajbos/testing-runtime

        - dockerfile: Docker-alpine
          containertag: ghcr.io/rajbos/testing-alpine

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
       
      - name: Build the Docker image
        run: docker build -t ${{ matrix.containertag }} --pull .
        
      - name: Setup GitHub Container Registry
        run: echo "${{ secrets.GH_PAT }}" | docker login $containerhost -u ${{ github.actor }} --password-stdin

      - name: Push to GitHub Container Registry
        run:  docker push ${{ matrix.containertag }}
        
      - name: Cleanup GitHub Container Registry login data
        run: docker logout $containerhost
      
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: rajbos-actions/snyk-actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=${{ matrix.dockerfile }}
          image: ${{ matrix.containertag }}
        continue-on-error: true

      - name: Upload Snyk scan result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

      - name: Scan image with grype
        uses: anchore/scan-action@v2
        with:
          image: ${{ matrix.containertag }}
          fail-build: true
          severity-cutoff: critical

      - name: Scan image with Trivy
        uses: homoluctus/gitrivy@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ matrix.containertag }}

      - name: Run the Anchore scan action itself with GitHub Advanced Security code scanning integration enabled
        uses: anchore/scan-action@main
        with:
          image: ${{ matrix.containertag }}
          acs-report-enable: true

      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.containertag }}
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'